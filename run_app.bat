@echo off
REM ============================================================
REM Dog Emotion AI - Script de Ejecuci√≥n Optimizado
REM ============================================================
REM Este script configura el entorno y ejecuta la aplicaci√≥n
REM de manera √≥ptima para Python 3.13 con instalaciones de usuario
REM ============================================================

setlocal enabledelayedexpansion

REM Colores para la consola
color 0A

REM T√≠tulo de la ventana
title Dog Emotion AI - An√°lisis Emocional de Mascotas

echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë                    üêï DOG EMOTION AI üêï                       ‚ïë
echo ‚ïë              An√°lisis Emocional de Mascotas con IA            ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

REM Detectar Python
echo [1/5] üîç Detectando Python...
python --version >nul 2>&1
if errorlevel 1 (
    echo ‚ùå ERROR: Python no est√° instalado o no est√° en el PATH
    echo üí° Instala Python 3.8+ desde https://python.org
    pause
    exit /b 1
)

REM Mostrar versi√≥n de Python
for /f "tokens=2" %%i in ('python --version 2^>^&1') do set PYTHON_VERSION=%%i
echo ‚úÖ Python %PYTHON_VERSION% detectado

REM Obtener rutas de Python
echo [2/5] üìÇ Configurando rutas de Python...
for /f "delims=" %%i in ('python -c "import site; print(site.USER_BASE)"') do set USER_BASE=%%i
for /f "delims=" %%i in ('python -c "import site; print(site.USER_SITE)"') do set USER_SITE=%%i

REM Configurar variables de entorno
echo [3/5] üîß Configurando entorno...
set PATH=%USER_BASE%\Scripts;%PATH%
set PYTHONPATH=%USER_SITE%;%PYTHONPATH%

REM Configurar TensorFlow para reducir warnings
set TF_CPP_MIN_LOG_LEVEL=2

REM Desactivar advertencias de protobuf
set PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python

echo ‚úÖ Entorno configurado correctamente

REM Verificar si es primera ejecuci√≥n
if not exist "cache\first_run_complete.txt" (
    echo [4/5] üöÄ Primera ejecuci√≥n detectada...
    echo.
    echo üì¶ Verificando dependencias...
    python fix_dependencies.py
    
    REM Marcar como ejecutado
    if not exist cache mkdir cache
    echo %date% %time% > cache\first_run_complete.txt
) else (
    echo [4/5] ‚úÖ Configuraci√≥n previa detectada
)

REM Ejecutar la aplicaci√≥n
echo [5/5] üåê Iniciando aplicaci√≥n web...
echo.
echo ============================================================
echo üåê La aplicaci√≥n se abrir√° en: http://localhost:5000
echo ‚ö†Ô∏è  Presiona Ctrl+C para detener el servidor
echo ============================================================
echo.

REM Ejecutar con manejo de errores
python main.py
if errorlevel 1 (
    echo.
    echo ‚ùå La aplicaci√≥n termin√≥ con errores
    echo.
    echo üí° Posibles soluciones:
    echo    1. Ejecuta: python fix_dependencies.py
    echo    2. Reinstala dependencias: pip install --user -r requirements.txt
    echo    3. Revisa el archivo logs\dog_emotion_ai.log
    echo.
    pause
) else (
    echo.
    echo ‚úÖ Aplicaci√≥n cerrada correctamente
    echo.
    timeout /t 3
)

endlocal